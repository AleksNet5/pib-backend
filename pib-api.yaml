openapi: 3.1.0
info:
  title: pib REST-API MOCK
  description: |-
    This API documentation is a first draft for the upcoming REST API development
  termsOfService: https://isento.de/
  contact:
    email: info@isento.de
  version: 0.0.1
tags:
  - name: personality
    description: CRUD-Operations for voice assistant personalities
  - name: chat
    description: CRUD-Operations for voice assistant chats
paths:
  /voice-assistant/personality:
    post:
      tags:
        - personality
      summary: Create new voice assistant personality
      requestBody:
        description: Creates a new voice assistant personality<br>Description requires UTF-8 charset<br> Minimum length = X<br> Maximum length = X
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantPersonality'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VoiceAssistantPersonality'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags: 
        - personality
      summary: Get all voice-assistant personalities

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantPersonalities'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /voice-assistant/personality/{personality_id}:
    get:
      tags:
        - personality
      summary: Get voice assistant by id
      parameters:
        - name: personality_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantPersonality'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - personality
      summary: Create new voice assistant personality
      parameters:
        - name: personality_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existing voice assistant personality<br>Description requires UTF-8 charset<br> Minimum length = X<br> Maximum length = X<br>Individual request body attributes may be nullable but all cannot be null
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantPersonality'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VoiceAssistantPersonality'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - personality
      summary: Deletes voice assistant personality by id
      parameters:
        - name: personality_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /voice-assistant/chat:
    post:
      tags:
        - chat
      summary: Create new voice assistant chat
      requestBody:
        description: Creates a new voice assistant chat
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantChat'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VoiceAssistantChat'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags: 
        - chat
      summary: Get all voice-assistant chats

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantChats'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /voice-assistant/chat/{chat_id}:
    get:
      tags:
        - chat
      summary: Get voice assistant chat by id
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantChat'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - chat
      summary: Create new voice assistant personality
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existing voice assistant chat<br>Individual request body attributes may be nullable but all cannot be null
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantChat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VoiceAssistantChat'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - chat
      summary: Deletes voice assistant personality by id
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /voice-assistant/chat/{chat_id}/messages:
    get:
      tags:
        - chat
      summary: Get voice assistant chat messages by chat id
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
        - name: timestamp
          description: Null the first time. If specified, loads messages before the specified time stamp. Otherwise, loads the most recent messages based on count.
          in: query
          required: false
          schema:
            type: string
            format: time-stamp
        - name: count
          description: Number of messages to be returned.
          in: query
          required: false
          schema:
            type: number
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantChatMessages'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - chat
      summary: Get voice assistant chat by id
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Adds prompt and the corresponding AI response to a chat based on chat id.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantChatMessages'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantChatMessages'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
components:
  schemas:
    VoiceAssistantPersonality:
      type: object
      properties:
        personality_id:
          type: string
          readOnly: true
          examples: 
            - ecb8ad22-891d-4744-80b3-7e6d6d84a5c0
            - f1eda93f-0ae3-4f41-8502-d56dddeb7034 
            - 864c6ebe-c514-4d1d-85af-8ccd385f3f17 
        name:
          type: string
          examples: 
            - Eva
            - Thomas
            - Janina
            - Georg
        description:
          type: string
          examples: 
            - You are a helpful assistant.
            - You act as a translator, translating all my messages into Japanese.
        gender:
          type: string
          enum: [Male, Female]
          examples: 
            - Female
            - Male
        pauseThreshold:
          type: number
          examples: 
            - 0.8
            - 1.0
      required:
        - personality_id
        - name
        - description
        - gender
        - pauseThreshold
    VoiceAssistantPersonalities:
      type: array
      items:
        $ref: '#/components/schemas/VoiceAssistantPersonality'
    VoiceAssistantChat:
      type: object
      properties:
        chat_id:
          type: string
          readOnly: true
          examples: 
            - 903edb9e-a95c-44d4-ad21-f3024c2e3f6f
            - f83913e4-ac40-498c-9bab-635958fbe096 
        title:
          type: string
          examples: 
            - Short Stories
            - Nürnberg
            - Definition of AI today
        voiceAssistantPersonality:
          readOnly: true
          $ref: '#/components/schemas/VoiceAssistantPersonality'
      required:
        - chat_id
        - title
        - voiceAssistantPersonality
    VoiceAssistantChats:
      type: array
      items:
        $ref: '#/components/schemas/VoiceAssistantChat'
    VoiceAssistantChatMessage:
      type: object
      properties:
        message_id:
          type: string
          readOnly: true
          examples: 
            - 3f51b823-730b-472e-8c8f-adac5ba5ccd3
            - 8731eb50-62b0-46cf-bea9-e6e9921a7e44  
        timestamp:
          type: string
          format: date-time
          readOnly: true
          examples: 
            - "2023-09-30T08:30:00Z"
            - "2023-10-05T10:11:00Z"
        isUser:
          type: boolean
          readOnly: true
        message_content:
          type: string
          examples: 
            - Tell me a collection of short stories.
            - Hello Thomas, tell me something about Nürnberg.
            - Here is a brief definition of our current understanding of AI...
        voiceAssistantChat:
          readOnly: true
          $ref: '#/components/schemas/VoiceAssistantChat'
      required:
        - message_id
        - timestamp
        - isUser
        - message_content
        - voiceAssistantChat
    VoiceAssistantChatMessages:
      type: array
      items:
        $ref: '#/components/schemas/VoiceAssistantChatMessage'  
    Error:
        required:
          - Error
        type: object
        properties:
          error:
            type: string
            examples: 
              - An error occurred
              - The requested resource is not available
  responses:
    '400':
      description: Bad Request
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/Error'