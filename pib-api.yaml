openapi: 3.0.3
info:
  title: pib REST-API MOCK
  description: |-
    This API documentation is a first draft for the upcoming REST API development
  termsOfService: https://isento.de/
  contact:
    email: info@isento.de
  version: 0.0.1
tags:
  - name: personality
    description: CRUD-Operations for voice assistant personalities
  - name: chat
    description: CRUD-Operations for voice assistant chats
paths:
  /voice-assistant/personality:
    post:
      tags:
        - personality
      summary: Create new voice assistant personality
      requestBody:
        description: Creates a new voice assistant personality<br>Description requires UTF-8 charset<br> Minimum length = X<br> Maximum length = X
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantPersonality'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VoiceAssistantPersonality'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags: 
        - personality
      summary: Get all voice-assistant personalities

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantPersonalities'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
  /voice-assistant/personality/{personality_id}:
    get:
      tags:
        - personality
      summary: Get voice assistant by id
      parameters:
        - name: personality_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantPersonality'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - personality
      summary: Create new voice assistant personality
      parameters:
        - name: personality_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existing voice assistant personality<br>Description requires UTF-8 charset<br> Minimum length = X<br> Maximum length = X<br>Individual request body attributes may be nullable but all cannot be null
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantPersonality'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VoiceAssistantPersonality'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - personality
      summary: Deletes voice assistant personality by id
      parameters:
        - name: personality_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
  /voice-assistant/chat:
    post:
      tags:
        - chat
      summary: Create new voice assistant chat
      requestBody:
        description: Creates a new voice assistant chat
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVoiceAssistantChat'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessfulVoiceAssistantChatCreationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags: 
        - chat
      summary: Get all voice-assistant chats

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllChats'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
  /voice-assistant/chat/{chat_id}:
    get:
      tags:
        - chat
      summary: Get voice assistant chat by id
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceAssistantChat'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - chat
      summary: Create new voice assistant personality
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existing voice assistant chat<br>Individual request body attributes may be nullable but all cannot be null
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoiceAssistantChatRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/UpdateVoiceAssistantChat'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - chat
      summary: Deletes voice assistant personality by id
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage' 
  /voice-assistant/chat/{chat_id}/messages:
    get:
      tags:
        - chat
      summary: Get voice assistant chat messages by chat id
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
        - name: timestamp
          description: Null the first time. If specified, loads messages before the specified time stamp. Otherwise, loads the most recent messages based on count.
          in: query
          required: false
          schema:
            type: string
            format: time-stamp
        - name: count
          description: Number of messages to be returned.
          in: query
          required: false
          schema:
            type: number
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceAssistantChatMessages'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
        - chat
      summary: Get voice assistant chat by id
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Adds prompt and the corresponding AI response to a chat based on chat id.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVoiceAssistantChatMessageRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddVoiceAssistantChatMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessage'            
components:
  schemas:
    VoiceAssistantPersonality:
      type: object
      properties:
        personality_id:
          type: string
          readOnly: true
          example: ecb8ad22-891d-4744-80b3-7e6d6d84a5c0
        name:
          type: string
          example: Thomas
        description:
          type: string
          example: You are a helpful assistant.
        gender:
          type: string
          enum: [Male, Female]
          example: Male
        pauseThreshold:
          type: number
          example: 0.8
      required:
        - personality_id
        - name
        - description
        - gender
        - pauseThreshold
    VoiceAssistantPersonalities:
      type: array
      items:
        $ref: '#/components/schemas/VoiceAssistantPersonality'
    GetAllChats:
      type: object
      properties:
        voiceAssistantChats:
          type: array
          items:
            type: object
            properties: 
              chat_id:
                type: string
                example: UUID
              title:
                type: string
                example: Nuremberg
              personality_id: 
                type: string
                example: UUID
              personality_name:
                type: string
                example: Eva
    GetVoiceAssistantChat:
      type: object
      properties:
        title:
          type: string
          example: Short Stories
        personality_id:
          type: string
          example: UUID
        personality_name:
          type: string
          example: Thomas
    CreateVoiceAssistantChat:
        required:
          - title
          - personality_id
        type: object
        properties:
          title:
            type: string
            example: Short Stories
          personality_id:
            type: string
            example: UUID
    SuccessfulVoiceAssistantChatCreationResponse:
        required:
          - chat_id
          - title
          - personality_id
          - personality_name
        type: object
        properties:
          chat_id:
            type: string
            example: UUID
          title:
            type: string
            example: Short Stories
          personality_id:
            type: string
            example: UUID
          personality_name:
            type: string
            example: Janina
    UpdateVoiceAssistantChatRequest:
        required:
          - title
          - personality
        type: object
        properties:
          title:
            type: string
            example: Short Stories
          personality:
            type: string
            example: Janina    
    UpdateVoiceAssistantChat:
        required:
          - chat_id
          - title
          - personality
        type: object
        properties:
          title:
            type: string
            example: Short Stories
          personality:
            type: string
            example: Janina
    GetVoiceAssistantChatMessages:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                example: Hallo Thomas, erzähle mir etwas über Nürnberg.
              timestamp:
                type: string
                format: date-time
                example: "2021-01-30T08:30:00Z"
              isUser:
                type: boolean
                example: true
    AddVoiceAssistantChatMessageRequest:
      type: object
      properties:
        message:
          type: string
          example: Hallo Thomas, erzähle mir etwas über Nürnberg.
    AddVoiceAssistantChatMessageResponse:
      type: object
      properties:
        user_prompt:
          type: object
          properties:
            message:
              type: string
              example: Hallo Thomas, erzähle mir etwas über Nürnberg.
            timestamp:
              type: string
              format: date-time
              example: "2021-01-30T08:30:00Z"
            isUser:
              type: boolean
              example: true
        ai_response:
          type: object
          properties:
            message:
              type: string
              example: Nürnberg ist eine Stadt in...
            timestamp:
              type: string
              format: date-time
              example: "2021-01-30T08:31:00Z"
            isUser:
              type: boolean
              example: false      
    ErrorMessage:
        required:
          - Error
        type: object
        properties:
          error:
            type: string
            example: error message