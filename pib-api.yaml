openapi: 3.1.0
info:
  title: pib REST-API MOCK
  description: |-
    This API documentation is a first draft for the upcoming REST API development
  termsOfService: https://isento.de/
  contact:
    email: info@isento.de
  version: 0.0.1
tags:
  - name: personality
    description: CRUD-Operations for voice assistant personalities
  - name: chat
    description: CRUD-Operations for voice assistant chats
  - name: motor-settings
    description: Read- and Update-Operations for motor-settings
  - name: camera-settings
    description: Read- and Update-Operations for camera-settings
  - name: bricklet
    description: Read- and Update-Operations for bricklet ids
  - name: motorBrickletPin
    description: Read- and Update-Operations for bricklet ids
paths:
  /voice-assistant/personality:
    post:
      tags:
        - personality
      summary: Add a new voice assistant personality
      operationId: createVoiceAssistantPersonality
      requestBody:
        description: Add a new voice assistant personality
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantPersonality'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VoiceAssistantPersonality'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags: 
        - personality
      summary: Get all voice assistant personalities
      operationId: getAllVoiceAssistantPersonalities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantPersonalities'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /voice-assistant/personality/{personality_id}:
    get:
      tags:
        - personality
      summary: Get a voice assistant personality by id
      operationId: getVoiceAssistantPersonalityById
      parameters:
        - name: personality_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantPersonality'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - personality
      summary: Update a voice assistant personality by id
      operationId: updateVoiceAssistantPersonalityById
      parameters:
        - name: personality_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existing voice assistant personality
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantPersonality'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VoiceAssistantPersonality'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - personality
      summary: Delete a voice assistant personality by id
      operationId: deleteVoiceAssistantPersonalityById
      parameters:
        - name: personality_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /voice-assistant/chat/{personality_id}:
    post:
      tags:
        - chat
      summary: Add a new voice assistant chat
      operationId: createVoiceAssistantChat
      parameters:
        - name: personality_id
          description: The personality id is forwarded by the personality tab
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Add a new voice assistant chat
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantChat'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VoiceAssistantChat'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /voice-assistant/chat:
    get:
      tags: 
        - chat
      summary: Get all voice assistant chats
      operationId: getAllVoiceAssistantChats
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantChats'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /voice-assistant/chat/{chat_id}:
    get:
      tags:
        - chat
      summary: Get a voice assistant chat by id
      operationId: getVoiceAssistantChatById
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantChat'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - chat
      summary: Update a voice assistant chat by id
      operationId: updateVoiceAssistantChatById
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existing voice assistant chat
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantChat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VoiceAssistantChat'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - chat
      summary: Delete a voice assistant chat by id
      operationId: deleteVoiceAssistantChatById
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /voice-assistant/chat/{chat_id}/messages:
    get:
      tags:
        - chat
      summary: Get all messages of a voice assistant chat by chat id
      operationId: getAllVoiceAssistantChatMessagesByChatId
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantChatMessages'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - chat
      summary: Add a message to a voice assistant chat
      operationId: createVoiceAssistantChatMessage
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Add a message to a voice assistant chat by chat id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceAssistantChatMessage'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantChatMessage'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /motor-settings:
    get:
      tags:
        - motor-settings
      summary: Get all motor-settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllMotorSettings'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /motor-settings/{motor_name}:
    get:
      tags:
        - motor-settings
      summary: Get the motor-settings of the motor matching the specified name
      parameters:
        - name: motor_name
          in: path
          required: true
          schema:
            type: string
            enum:
              - thumb_left_opposition
              - thumb_left_stretch
              - index_left_stretch
              - middle_left_stretch
              - ring_left_stretch
              - pinky_left_stretch
              - all_fingers_left
              - thumb_right_opposition
              - thumb_right_stretch
              - index_right_stretch
              - middle_right_stretch
              - ring_right_stretch
              - pinky_right_stretch
              - all_fingers_right
              - upper_arm_left_rotation
              - elbow_left
              - lower_arm_left_rotation
              - wrist_left
              - shoulder_vertical_left
              - shoulder_horizontal_left
              - upper_arm_right_rotation
              - elbow_right
              - lower_arm_right_rotation
              - wrist_right
              - shoulder_vertical_right
              - shoulder_horizontal_right
              - tilt_forward_motor
              - tilt_sideways_motor
              - turn_head_motor

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MotorSettings'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

    put:
      tags:
        - motor-settings
      summary: Select a motor by name and update its motor-settings
      parameters:
        - name: motor_name
          in: path
          required: true
          schema:
            type: string
            enum:
              - thumb_left_opposition
              - thumb_left_stretch
              - index_left_stretch
              - middle_left_stretch
              - ring_left_stretch
              - pinky_left_stretch
              - all_fingers_left
              - thumb_right_opposition
              - thumb_right_stretch
              - index_right_stretch
              - middle_right_stretch
              - ring_right_stretch
              - pinky_right_stretch
              - all_fingers_right
              - upper_arm_left_rotation
              - elbow_left
              - lower_arm_left_rotation
              - wrist_left
              - shoulder_vertical_left
              - shoulder_horizontal_left
              - upper_arm_right_rotation
              - elbow_right
              - lower_arm_right_rotation
              - wrist_right
              - shoulder_vertical_right
              - shoulder_horizontal_right
              - tilt_forward_motor
              - tilt_sideways_motor
              - turn_head_motor
      requestBody:
        description: Update the (existing) motor-settings of a motor.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MotorSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/MotorSettings'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /camera-settings:
    get:
      tags:
        - camera-settings
      summary: Get the camera-settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CameraSettings'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - camera-settings
      summary: Updates the camera-settings
      requestBody:
        description: Update the camera-settings.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CameraSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/CameraSettings'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /bricklet:
    get:
      tags: 
        - bricklet
      summary: Get all brickletIds
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bricklets'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /bricklet/{bricklet-number}:
    get:
      tags: 
        - bricklet
      summary: Get one brickletId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBrickletByBrickletNumber'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - bricklet
      summary: Update brickletId
      requestBody:
        description: Update brickletId
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bricklet'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bricklet'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /motor-bricklet-pin:
    get:
      tags: 
        - motorBrickletPin
      summary: Get all motor to bricklet pin combinations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllMotorBrickletPin'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - motorBrickletPin
      summary: Update bricklet pin of motor by motor name
      requestBody:
        description: Update brickletId
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMotorBrickletPin'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MotorBrickletPin'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /motor-bricklet-pin/{motor-name}:
    get:
      tags: 
        - motorBrickletPin
      summary: Get motor bricklet pin combination by motor name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllMotorBrickletPin'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
components:
  schemas:
    VoiceAssistantPersonality:
      type: object
      properties:
        personalityId:
          type: string
          readOnly: true
          examples: 
            - ecb8ad22-891d-4744-80b3-7e6d6d84a5c0
            - f1eda93f-0ae3-4f41-8502-d56dddeb7034 
            - 864c6ebe-c514-4d1d-85af-8ccd385f3f17 
        name:
          type: string
          examples: 
            - Eva
            - Thomas
            - Janina
            - Georg
        description:
          type: string
          minLength: 1
          examples: 
            - You are a helpful assistant.
            - You act as a translator, translating all my messages into Japanese.
        gender:
          type: string
          enum: [Male, Female]
          examples: 
            - Female
            - Male
        pauseThreshold:
          type: number
          examples: 
            - 0.8
            - 1.0
      required:
        - personality_id
        - name
        - description
        - gender
        - pauseThreshold
    VoiceAssistantPersonalities:
      properties:
        voiceAssistantPersonalities:
          type: array
          items:
            $ref: '#/components/schemas/VoiceAssistantChat'
    VoiceAssistantChat:
      type: object
      properties:
        chatId:
          type: string
          readOnly: true
          examples: 
            - 903edb9e-a95c-44d4-ad21-f3024c2e3f6f
            - f83913e4-ac40-498c-9bab-635958fbe096 
        topic:
          type: string
          default: New conversation
          examples: 
            - Short Stories
            - Nürnberg
            - Definition of AI today
        voiceAssistantPersonality:
          readOnly: true
          $ref: '#/components/schemas/VoiceAssistantPersonality'
      required:
        - chat_id
        - topic
        - voiceAssistantPersonality
    VoiceAssistantChats:
      properties:
        voiceAssistantChats:
          type: array
          items:
            $ref: '#/components/schemas/VoiceAssistantChat'
    VoiceAssistantChatMessage:
      type: object
      properties:
        message_id:
          type: string
          readOnly: true
          examples: 
            - 3f51b823-730b-472e-8c8f-adac5ba5ccd3
            - 8731eb50-62b0-46cf-bea9-e6e9921a7e44  
        timestamp:
          type: string
          format: date-time
          readOnly: true
          examples: 
            - "2023-09-30T08:30:00Z"
            - "2023-10-05T10:11:00Z"
        isUser:
          type: boolean
          readOnly: true
        messageContent:
          type: string
          examples: 
            - Tell me a collection of short stories.
            - Hello Thomas, tell me something about Nürnberg.
            - Here is a brief definition of our current understanding of AI...
        voiceAssistantChat:
          readOnly: true
          $ref: '#/components/schemas/VoiceAssistantChat'
      required:
        - message_id
        - timestamp
        - isUser
        - message_content
        - voiceAssistantChat
    VoiceAssistantChatMessages:
      properties:
        voiceAssistantChatMessages:
          type: array
          items:
            $ref: '#/components/schemas/VoiceAssistantChatMessage'
    MotorSettings:
      type: object
      properties:
        name:
          type: string
          examples:
            - thumb_right_opposition
          enum:
            - thumb_left_opposition
            - thumb_left_stretch
            - index_left_stretch
            - middle_left_stretch
            - ring_left_stretch
            - pinky_left_stretch
            - all_fingers_left
            - thumb_right_opposition
            - thumb_right_stretch
            - index_right_stretch
            - middle_right_stretch
            - ring_right_stretch
            - pinky_right_stretch
            - all_fingers_right
            - upper_arm_left_rotation
            - elbow_left
            - lower_arm_left_rotation
            - wrist_left
            - shoulder_vertical_left
            - shoulder_horizontal_left
            - upper_arm_right_rotation
            - elbow_right
            - lower_arm_right_rotation
            - wrist_right
            - shoulder_vertical_right
            - shoulder_horizontal_right
            - tilt_forward_motor
            - tilt_sideways_motor
            - turn_head_motor
        turnedOn: 
          type: boolean
          examples: 
            - true
        pulseWidthMin: 
          type: integer
          minimum: 0
          maximum: 65535
          examples: 
            - 10000
        pulseWidthMax: 
          type: integer
          minimum: 0
          maximum: 65535
          examples: 
            - 50000
        rotationRangeMin: 
          type: integer
          minimum: -9000
          maximum: 9000
          examples: 
            - -3000
        rotationRangeMax: 
          type: integer
          minimum: -9000
          maximum: 9000
          examples: 
            - 4000
        velocity: 
          type: integer
          minimum: 0
          maximum: 50000
          examples: 
            - 12000
        acceleration: 
          type: integer
          minimum: 0
          maximum: 50000
          examples: 
            - 3500
        deceleration: 
          type: integer
          minimum: 0
          maximum: 50000
          examples: 
            - 25000
        period: 
          type: integer
          minimum: 0
          maximum: 100000
          examples: 
            - 60000
      required:
        - motor_name
        - turned_on
        - pulse_width_min
        - pulse_width_max
        - rotation_range_min
        - rotation_range_max
        - velocity
        - acceleration
        - deceleration
        - period
    AllMotorSettings:
      properties:
        motorSettings:
          type: array
          items:
            $ref: '#/components/schemas/MotorSettings'
    CameraSettings:
      type: object
      properties:
        is_active: 
          type: boolean
          examples: 
            - true
        refresh_rate: 
          description: "unit of measure: seconds (s)"
          type: number
          format: float
          minimum: 0.1
          maximum: 1.0
          multipleOf: 0.1
          examples: 
            - 0.5
        quality_factor: 
          type: integer
          minimum: 10
          maximum: 90
          multipleOf: 10
          examples: 
            - 30
        resolution:
          type: string
          enum:
            - SD
            - HD
            - FHD
          examples:
            - SD
        resX:
          type: integer
          examples:
            - 620
        resY:
          type: integer
          examples:
            - 480
      required:
        - is_active 
        - refresh_rate
        - quality_factor
        - resolution
        - resX
        - resY
    Bricklet:
      type: object
      properties:
        brickletNumber:
          readOnly: true
          type: integer
          examples: 
            - 1
        brickletId:
          type: string
          examples:
            - XYZ
    GetBrickletByBrickletNumber:
      type: object
      properties:
        brickletId:
          type: string
          examples:
            - XYZ
    Bricklets:
      type: object
      properties:
        bricklets:
          type: array
          items:
            $ref: '#/components/schemas/Bricklet'
    MotorBrickletPin:
      type: object
      properties:
        motorName:
          type: string
          examples:
            - tilt_forward_motor
        brickletId:
          type: integer
          examples:
            - 1
        pin:
          type: integer
          examples:
            - 0
    PutMotorBrickletPin:
      type: object
      properties:
        brickletId:
          type: integer
          examples:
            - 1
        motorName:
          type: string
          examples:
            - tilt_forward_motor
        pin:
          type: integer
          examples:
            - 0
    AllMotorBrickletPin:
      type: object
      properties:
        motorBrickletPins:
          type: array
          items:
            $ref: '#/components/schemas/MotorBrickletPin'
    Error:
        required:
          - Error
        type: object
        properties:
          error:
            type: string
            examples: 
              - An error occurred
              - The requested resource is not available
  responses:
    '204':
      description: No Content
    '400':
      description: Bad Request
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/Error'
