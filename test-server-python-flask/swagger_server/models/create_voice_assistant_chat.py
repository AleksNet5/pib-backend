# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CreateVoiceAssistantChat(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: str=None, personality_id: str=None):  # noqa: E501
        """CreateVoiceAssistantChat - a model defined in Swagger

        :param title: The title of this CreateVoiceAssistantChat.  # noqa: E501
        :type title: str
        :param personality_id: The personality_id of this CreateVoiceAssistantChat.  # noqa: E501
        :type personality_id: str
        """
        self.swagger_types = {
            'title': str,
            'personality_id': str
        }

        self.attribute_map = {
            'title': 'title',
            'personality_id': 'personality_id'
        }
        self._title = title
        self._personality_id = personality_id

    @classmethod
    def from_dict(cls, dikt) -> 'CreateVoiceAssistantChat':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateVoiceAssistantChat of this CreateVoiceAssistantChat.  # noqa: E501
        :rtype: CreateVoiceAssistantChat
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this CreateVoiceAssistantChat.


        :return: The title of this CreateVoiceAssistantChat.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this CreateVoiceAssistantChat.


        :param title: The title of this CreateVoiceAssistantChat.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")  # noqa: E501

        self._title = title

    @property
    def personality_id(self) -> str:
        """Gets the personality_id of this CreateVoiceAssistantChat.


        :return: The personality_id of this CreateVoiceAssistantChat.
        :rtype: str
        """
        return self._personality_id

    @personality_id.setter
    def personality_id(self, personality_id: str):
        """Sets the personality_id of this CreateVoiceAssistantChat.


        :param personality_id: The personality_id of this CreateVoiceAssistantChat.
        :type personality_id: str
        """
        if personality_id is None:
            raise ValueError("Invalid value for `personality_id`, must not be `None`")  # noqa: E501

        self._personality_id = personality_id
