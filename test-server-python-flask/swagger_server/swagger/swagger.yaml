openapi: 3.0.3
info:
  title: pib REST-API MOCK
  description: This API documentation is a first draft for the upcoming REST API development
  termsOfService: https://isento.de/
  contact:
    email: info@isento.de
  version: 0.0.1
servers:
- url: /
tags:
- name: personality
  description: CRUD-Operations for voice assistant personalities
- name: chat
  description: CRUD-Operations for voice assistant chats
paths:
  /voice-assistant/personality:
    get:
      tags:
      - personality
      summary: Get all voice-assistant personalities
      operationId: voice_assistant_personality_get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPersonalities'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.personality_controller
    post:
      tags:
      - personality
      summary: Create new voice assistant personality
      operationId: voice_assistant_personality_post
      requestBody:
        description: Creates a new voice assistant personality<br>Description requires
          UTF-8 charset<br> Minimum length = X<br> Maximum length = X
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVoiceAssistantPersonality'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulVoiceAssistantPersonalityCreationResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.personality_controller
  /voice-assistant/personality/{personality_id}:
    get:
      tags:
      - personality
      summary: Get voice assistant by id
      operationId: voice_assistant_personality_personality_id_get
      parameters:
      - name: personality_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceAssistantPersonality'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.personality_controller
    put:
      tags:
      - personality
      summary: Create new voice assistant personality
      operationId: voice_assistant_personality_personality_id_put
      parameters:
      - name: personality_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Update an existing voice assistant personality<br>Description
          requires UTF-8 charset<br> Minimum length = X<br> Maximum length = X<br>Individual
          request body attributes may be nullable but all cannot be null
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoiceAssistantPersonalityRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVoiceAssistantPersonality'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.personality_controller
    delete:
      tags:
      - personality
      summary: Deletes voice assistant personality by id
      operationId: voice_assistant_personality_personality_id_delete
      parameters:
      - name: personality_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.personality_controller
  /voice-assistant/chat:
    get:
      tags:
      - chat
      summary: Get all voice-assistant chats
      operationId: voice_assistant_chat_get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllChats'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.chat_controller
    post:
      tags:
      - chat
      summary: Create new voice assistant chat
      operationId: voice_assistant_chat_post
      requestBody:
        description: Creates a new voice assistant chat
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVoiceAssistantChat'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulVoiceAssistantChatCreationResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.chat_controller
  /voice-assistant/chat/{chat_id}:
    get:
      tags:
      - chat
      summary: Get voice assistant chat by id
      operationId: voice_assistant_chat_chat_id_get
      parameters:
      - name: chat_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceAssistantChat'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.chat_controller
    put:
      tags:
      - chat
      summary: Create new voice assistant personality
      operationId: voice_assistant_chat_chat_id_put
      parameters:
      - name: chat_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Update an existing voice assistant chat<br>Individual request
          body attributes may be nullable but all cannot be null
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoiceAssistantChatRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVoiceAssistantChat'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.chat_controller
    delete:
      tags:
      - chat
      summary: Deletes voice assistant personality by id
      operationId: voice_assistant_chat_chat_id_delete
      parameters:
      - name: chat_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.chat_controller
  /voice-assistant/chat/{chat_id}/messages:
    get:
      tags:
      - chat
      summary: Get voice assistant chat messages by chat id
      operationId: voice_assistant_chat_chat_id_messages_get
      parameters:
      - name: chat_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: query
        description: "Null the first time. If specified, loads messages before the\
          \ specified time stamp. Otherwise, loads the most recent messages based\
          \ on count."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: time-stamp
      - name: count
        in: query
        description: Number of messages to be returned.
        required: false
        style: form
        explode: true
        schema:
          type: number
          default: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceAssistantChatMessages'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.chat_controller
    post:
      tags:
      - chat
      summary: Get voice assistant chat by id
      operationId: voice_assistant_chat_chat_id_messages_post
      parameters:
      - name: chat_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Adds prompt and the corresponding AI response to a chat based
          on chat id.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVoiceAssistantChatMessageRequest'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddVoiceAssistantChatMessageResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      x-openapi-router-controller: swagger_server.controllers.chat_controller
components:
  schemas:
    GetAllPersonalities:
      type: object
      properties:
        voiceAssistantPersonalities:
          type: array
          items:
            $ref: '#/components/schemas/GetAllPersonalities_voiceAssistantPersonalities'
      example:
        voiceAssistantPersonalities:
        - personality_id: UUID
          gender: Male
          name: Georg
          description: Personality Description
          pauseThreshold: 0.8
        - personality_id: UUID
          gender: Male
          name: Georg
          description: Personality Description
          pauseThreshold: 0.8
    VoiceAssistantPersonality:
      type: object
      properties:
        personality_id:
          type: string
          example: UUID
        name:
          type: string
          example: Janina
        description:
          type: string
          example: Personality Description
        gender:
          type: string
          example: Female
          enum:
          - Male
          - Female
        pauseThreshold:
          type: number
          example: 0.8
      example:
        personality_id: UUID
        gender: Female
        name: Janina
        description: Personality Description
        pauseThreshold: 0.8
    CreateVoiceAssistantPersonality:
      required:
      - description
      - gender
      - name
      - pauseThreshold
      type: object
      properties:
        name:
          type: string
          example: Thomas
        description:
          type: string
          example: Personality Description
        gender:
          type: string
          example: Male
          enum:
          - Male
          - Female
        pauseThreshold:
          type: number
          example: 0.8
    SuccessfulVoiceAssistantPersonalityCreationResponse:
      type: object
      properties:
        personality_id:
          type: string
          example: UUID
        name:
          type: string
          example: Thomas
        description:
          type: string
          example: Personality Description
        gender:
          type: string
          example: Male
          enum:
          - Male
          - Female
        pauseThreshold:
          type: number
          example: 0.8
      example:
        personality_id: UUID
        gender: Male
        name: Thomas
        description: Personality Description
        pauseThreshold: 0.8
    UpdateVoiceAssistantPersonality:
      type: object
      properties:
        personality_id:
          type: string
          example: UUID
        name:
          type: string
          example: Eva
        description:
          type: string
          example: Personality Description
        gender:
          type: string
          example: Female
          enum:
          - Male
          - Female
        pauseThreshold:
          type: number
          example: 0.8
      example:
        personality_id: UUID
        gender: Female
        name: Eva
        description: Personality Description
        pauseThreshold: 0.8
    UpdateVoiceAssistantPersonalityRequest:
      type: object
      properties:
        name:
          type: string
          example: Eva
        description:
          type: string
          example: Personality Description
        gender:
          type: string
          example: Female
          enum:
          - Male
          - Female
        pauseThreshold:
          type: number
          example: 0.8
    GetAllChats:
      type: object
      properties:
        voiceAssistantChats:
          type: array
          items:
            $ref: '#/components/schemas/GetAllChats_voiceAssistantChats'
      example:
        voiceAssistantChats:
        - personality_id: UUID
          personality_name: Eva
          title: Nuremberg
          chat_id: UUID
        - personality_id: UUID
          personality_name: Eva
          title: Nuremberg
          chat_id: UUID
    GetVoiceAssistantChat:
      type: object
      properties:
        title:
          type: string
          example: Short Stories
        personality_id:
          type: string
          example: UUID
        personality_name:
          type: string
          example: Thomas
      example:
        personality_id: UUID
        personality_name: Thomas
        title: Short Stories
    CreateVoiceAssistantChat:
      required:
      - personality_id
      - title
      type: object
      properties:
        title:
          type: string
          example: Short Stories
        personality_id:
          type: string
          example: UUID
    SuccessfulVoiceAssistantChatCreationResponse:
      required:
      - chat_id
      - personality_id
      - personality_name
      - title
      type: object
      properties:
        chat_id:
          type: string
          example: UUID
        title:
          type: string
          example: Short Stories
        personality_id:
          type: string
          example: UUID
        personality_name:
          type: string
          example: Janina
      example:
        personality_id: UUID
        personality_name: Janina
        title: Short Stories
        chat_id: UUID
    UpdateVoiceAssistantChatRequest:
      required:
      - personality
      - title
      type: object
      properties:
        title:
          type: string
          example: Short Stories
        personality:
          type: string
          example: Janina
    UpdateVoiceAssistantChat:
      required:
      - chat_id
      - personality
      - title
      type: object
      properties:
        title:
          type: string
          example: Short Stories
        personality:
          type: string
          example: Janina
      example:
        personality: Janina
        title: Short Stories
    GetVoiceAssistantChatMessages:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/GetVoiceAssistantChatMessages_messages'
      example:
        messages:
        - message: "Hallo Thomas, erzähle mir etwas über Nürnberg."
          isUser: true
          timestamp: 2021-01-30T08:30:00Z
        - message: "Hallo Thomas, erzähle mir etwas über Nürnberg."
          isUser: true
          timestamp: 2021-01-30T08:30:00Z
    AddVoiceAssistantChatMessageRequest:
      type: object
      properties:
        message:
          type: string
          example: "Hallo Thomas, erzähle mir etwas über Nürnberg."
    AddVoiceAssistantChatMessageResponse:
      type: object
      properties:
        user_prompt:
          $ref: '#/components/schemas/GetVoiceAssistantChatMessages_messages'
        ai_response:
          $ref: '#/components/schemas/AddVoiceAssistantChatMessageResponse_ai_response'
      example:
        user_prompt:
          message: "Hallo Thomas, erzähle mir etwas über Nürnberg."
          isUser: true
          timestamp: 2021-01-30T08:30:00Z
        ai_response:
          message: Nürnberg ist eine Stadt in...
          isUser: false
          timestamp: 2021-01-30T08:31:00Z
    ErrorMessage:
      required:
      - Error
      type: object
      properties:
        error:
          type: string
          example: error message
    GetAllPersonalities_voiceAssistantPersonalities:
      type: object
      properties:
        personality_id:
          type: string
          example: UUID
        name:
          type: string
          example: Georg
        description:
          type: string
          example: Personality Description
        gender:
          type: string
          example: Male
          enum:
          - Male
          - Female
        pauseThreshold:
          type: number
          example: 0.8
      example:
        personality_id: UUID
        gender: Male
        name: Georg
        description: Personality Description
        pauseThreshold: 0.8
    GetAllChats_voiceAssistantChats:
      type: object
      properties:
        chat_id:
          type: string
          example: UUID
        title:
          type: string
          example: Nuremberg
        personality_id:
          type: string
          example: UUID
        personality_name:
          type: string
          example: Eva
      example:
        personality_id: UUID
        personality_name: Eva
        title: Nuremberg
        chat_id: UUID
    GetVoiceAssistantChatMessages_messages:
      type: object
      properties:
        message:
          type: string
          example: "Hallo Thomas, erzähle mir etwas über Nürnberg."
        timestamp:
          type: string
          format: date-time
          example: 2021-01-30T08:30:00Z
        isUser:
          type: boolean
          example: true
      example:
        message: "Hallo Thomas, erzähle mir etwas über Nürnberg."
        isUser: true
        timestamp: 2021-01-30T08:30:00Z
    AddVoiceAssistantChatMessageResponse_ai_response:
      type: object
      properties:
        message:
          type: string
          example: Nürnberg ist eine Stadt in...
        timestamp:
          type: string
          format: date-time
          example: 2021-01-30T08:31:00Z
        isUser:
          type: boolean
          example: false
      example:
        message: Nürnberg ist eine Stadt in...
        isUser: false
        timestamp: 2021-01-30T08:31:00Z

