version: '3'

networks:
  pib-network:
    driver: bridge

services:  
  flask-app:
    image: flask_api
    build:
      context: ./pib_api/flask/
      dockerfile: ./Dockerfile
    networks:
      - pib-network
    ports:
      - "5000:5000"
    volumes:
      - ./pib_api/flask/:/app
      - programs:/root/cerebra_programs
    environment:
      - SQLALCHEMY_DATABASE_URI=sqlite:////app/pibdata.db
    command: "bash -c 'flask --app run db upgrade && flask --app run seed_db && flask --app run run --host 0.0.0.0 --debug'"

  # ros-camera:
  #   image: ros-camera
  #   privileged: true
  #   build:
  #     context: ./ros_packages
  #     dockerfile: ./camera/Dockerfile
  #   command: ros2 run oak_d_lite stereo
  #   # Volume binding should not be necessary here, 
  #   # but removing will stop the camera from showing pictures for some reason
  #   volumes:
  #     - /dev/:/dev/
  #   devices:
  #     - /dev/bus/usb:/dev/bus/usb
  #   networks:
  #     - pib-network

  ros-motors:
    image: ros_motors
    build:
      context: .
      dockerfile: ./ros_packages/motors/Dockerfile
    command: /bin/bash -c 'python3 /app/motors/pib_motors/pib_motors/update_bricklet_uids.py check_and_update; ros2 launch motors launch.yaml'
    environment:
      - FLASK_API_BASE_URL=http://flask-app:5000
      - TINKERFORGE_HOST=tinkerforge-brickd
      - TINKERFORGE_PORT=4223
    networks:
      - pib-network
    restart: always
    depends_on:
      - tinkerforge-brickd
      - flask-app

  ros-voice_assistant:
    image: ros_voice_assistant
    privileged: true
    build:
      context: .
      dockerfile: ./ros_packages/voice_assistant/Dockerfile
    command: ros2 launch voice_assistant launch.yaml
    environment:
      - PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native
      - ALSA_CARD=Generic
      - FLASK_API_BASE_URL=http://flask-app:5000
      - VOICE_ASSISTANT_DIR=/app/ros2_ws/voice_assistant
    env_file:
      - password.env
    volumes:
      - /media/dyan/project/projects/voice/:/data/voice
      - /dev/snd:/dev/snd
      - /dev/dsp:/dev/dsp
      - /etc/machine-id:/etc/machine-id
      - ${XDG_RUNTIME_DIR}/pulse/native:${XDG_RUNTIME_DIR}/pulse/native
      - ~/.config/pulse/cookie:/root/.config/pulse/cookie
    networks:
      - pib-network
    restart: always
    depends_on:
      - flask-app

  ros-programs:
    image: ros_programs
    build:
      context: ./ros_packages
      dockerfile: ./programs/Dockerfile
    command: ros2 launch programs program_launch.yaml
    environment:
      - FLASK_API_BASE_URL=http://flask-app:5000
      - TINKERFORGE_HOST=tinkerforge-brickd
      - TINKERFORGE_PORT=4223
      - PYTHON_BINARY=/usr/bin/python3
      - PROGRAM_DIR=/ros2_ws/cerebra_programs
      - VOICE_ASSISTANT_DIR=/app/ros2_ws/voice_assistant
    volumes:
      - programs:/ros2_ws/cerebra_programs
    networks:
      - pib-network

  rosbridge-ws:
    build:
      context: ./ros_packages
      dockerfile: ./rosbridge/Dockerfile
    ports:
      - 9090:9090
    command: ros2 launch rosbridge_server rosbridge_websocket_launch.xml
    networks:
      - pib-network

  tinkerforge-brickd:
    privileged: true
    image: tinkerforge-brickd
    networks:
      - pib-network
    build:
      context: .
      dockerfile: Dockerfile.brickd
    ports:
      - "4223:4223"
    tty: true
   # Mount bricklets
    devices:
     - /dev/gpiomem:/dev/gpiomem
    depends_on:
      - flask-app


volumes:
  programs:
